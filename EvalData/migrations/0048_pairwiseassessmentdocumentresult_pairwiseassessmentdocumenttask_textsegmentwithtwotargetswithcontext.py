# Generated by Django 3.2.11 on 2022-03-24 15:23
import django.db.models.deletion
from django.conf import settings
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):

    dependencies = [
        ('Campaign', '0014_campaign_campaignoptions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('EvalData', '0047_auto_20210804_0940'),
    ]

    operations = [
        migrations.CreateModel(
            name='TextSegmentWithTwoTargetsWithContext',
            fields=[
                (
                    'textsegmentwithtwotargets_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='EvalData.textsegmentwithtwotargets',
                    ),
                ),
                (
                    'documentID',
                    models.CharField(
                        help_text='(max. 100 characters)',
                        max_length=100,
                        verbose_name='Document ID',
                    ),
                ),
                (
                    'isCompleteDocument',
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        verbose_name='Complete document?',
                    ),
                ),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
            bases=('EvalData.textsegmentwithtwotargets',),
        ),
        migrations.CreateModel(
            name='PairwiseAssessmentDocumentTask',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'dateCreated',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='Date created'
                    ),
                ),
                (
                    'dateActivated',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date activated'
                    ),
                ),
                (
                    'dateCompleted',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date completed'
                    ),
                ),
                (
                    'dateRetired',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date retired'
                    ),
                ),
                (
                    'dateModified',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date modified'
                    ),
                ),
                (
                    'activated',
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        verbose_name='Activated?',
                    ),
                ),
                (
                    'completed',
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        verbose_name='Completed?',
                    ),
                ),
                (
                    'retired',
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        verbose_name='Retired?',
                    ),
                ),
                (
                    'rawData',
                    models.TextField(
                        blank=True, editable=False, verbose_name='Raw data'
                    ),
                ),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                (
                    'requiredAnnotations',
                    models.PositiveSmallIntegerField(
                        help_text='(value in range=[1,50])',
                        verbose_name='Required annotations',
                    ),
                ),
                (
                    'batchNo',
                    models.PositiveIntegerField(
                        help_text='(1-based)', verbose_name='Batch number'
                    ),
                ),
                (
                    'activatedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_pairwiseassessmentdocumenttask_activated_by',
                        related_query_name='evaldata_pairwiseassessmentdocumenttasks',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Activated by',
                    ),
                ),
                (
                    'assignedTo',
                    models.ManyToManyField(
                        blank=True,
                        db_index=True,
                        help_text='(users working on this task)',
                        related_name='evaldata_pairwiseassessmentdocumenttask_assignedTo',
                        related_query_name='evaldata_pairwiseassessmentdocumenttasks',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Assigned to',
                    ),
                ),
                (
                    'batchData',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_pairwiseassessmentdocumenttask_batchData',
                        related_query_name='evaldata_pairwiseassessmentdocumenttasks',
                        to='Campaign.campaigndata',
                        verbose_name='Batch data',
                    ),
                ),
                (
                    'campaign',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_pairwiseassessmentdocumenttask_campaign',
                        related_query_name='evaldata_pairwiseassessmentdocumenttasks',
                        to='Campaign.campaign',
                        verbose_name='Campaign',
                    ),
                ),
                (
                    'completedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_pairwiseassessmentdocumenttask_completed_by',
                        related_query_name='evaldata_pairwiseassessmentdocumenttasks',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Completed by',
                    ),
                ),
                (
                    'createdBy',
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_pairwiseassessmentdocumenttask_created_by',
                        related_query_name='evaldata_pairwiseassessmentdocumenttasks',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Created by',
                    ),
                ),
                (
                    'items',
                    models.ManyToManyField(
                        related_name='evaldata_pairwiseassessmentdocumenttask_items',
                        related_query_name='evaldata_pairwiseassessmentdocumenttasks',
                        to='EvalData.TextSegmentWithTwoTargetsWithContext',
                        verbose_name='Items',
                    ),
                ),
                (
                    'modifiedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_pairwiseassessmentdocumenttask_modified_by',
                        related_query_name='evaldata_pairwiseassessmentdocumenttasks',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Modified by',
                    ),
                ),
                (
                    'retiredBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_pairwiseassessmentdocumenttask_retired_by',
                        related_query_name='evaldata_pairwiseassessmentdocumenttasks',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Retired by',
                    ),
                ),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PairwiseAssessmentDocumentResult',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'dateCreated',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='Date created'
                    ),
                ),
                (
                    'dateActivated',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date activated'
                    ),
                ),
                (
                    'dateCompleted',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date completed'
                    ),
                ),
                (
                    'dateRetired',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date retired'
                    ),
                ),
                (
                    'dateModified',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date modified'
                    ),
                ),
                (
                    'activated',
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        verbose_name='Activated?',
                    ),
                ),
                (
                    'completed',
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        verbose_name='Completed?',
                    ),
                ),
                (
                    'retired',
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        verbose_name='Retired?',
                    ),
                ),
                (
                    'rawData',
                    models.TextField(
                        blank=True, editable=False, verbose_name='Raw data'
                    ),
                ),
                ('_str_name', models.TextField(blank=True, default='', editable=False)),
                (
                    'score1',
                    models.PositiveSmallIntegerField(
                        help_text='(value in range=[1,100])', verbose_name='Score (1)'
                    ),
                ),
                (
                    'score2',
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text='(value in range=[1,100])',
                        null=True,
                        verbose_name='Score (2)',
                    ),
                ),
                (
                    'start_time',
                    models.FloatField(
                        help_text='(in seconds)', verbose_name='Start time'
                    ),
                ),
                (
                    'end_time',
                    models.FloatField(
                        help_text='(in seconds)', verbose_name='End time'
                    ),
                ),
                (
                    'activatedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_pairwiseassessmentdocumentresult_activated_by',
                        related_query_name='evaldata_pairwiseassessmentdocumentresults',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Activated by',
                    ),
                ),
                (
                    'completedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_pairwiseassessmentdocumentresult_completed_by',
                        related_query_name='evaldata_pairwiseassessmentdocumentresults',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Completed by',
                    ),
                ),
                (
                    'createdBy',
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_pairwiseassessmentdocumentresult_created_by',
                        related_query_name='evaldata_pairwiseassessmentdocumentresults',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Created by',
                    ),
                ),
                (
                    'item',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_pairwiseassessmentdocumentresult_item',
                        related_query_name='evaldata_pairwiseassessmentdocumentresults',
                        to='EvalData.textsegmentwithtwotargetswithcontext',
                        verbose_name='Item',
                    ),
                ),
                (
                    'modifiedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_pairwiseassessmentdocumentresult_modified_by',
                        related_query_name='evaldata_pairwiseassessmentdocumentresults',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Modified by',
                    ),
                ),
                (
                    'retiredBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_pairwiseassessmentdocumentresult_retired_by',
                        related_query_name='evaldata_pairwiseassessmentdocumentresults',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Retired by',
                    ),
                ),
                (
                    'task',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_pairwiseassessmentdocumentresult_task',
                        related_query_name='evaldata_pairwiseassessmentdocumentresults',
                        to='EvalData.pairwiseassessmentdocumenttask',
                        verbose_name='Task',
                    ),
                ),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
    ]
