# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-06-19 23:17
from __future__ import unicode_literals

import django.db.models.deletion
from django.conf import settings
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Campaign', '0005_trusteduser'),
        ('EvalData', '0018_auto_20170607_2120'),
    ]

    operations = [
        migrations.CreateModel(
            name='MultiModalAssessmentResult',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'dateCreated',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='Date created'
                    ),
                ),
                (
                    'dateActivated',
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name='Date activated',
                    ),
                ),
                (
                    'dateCompleted',
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name='Date completed',
                    ),
                ),
                (
                    'dateRetired',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date retired'
                    ),
                ),
                (
                    'dateModified',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date modified'
                    ),
                ),
                (
                    'activated',
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        verbose_name='Activated?',
                    ),
                ),
                (
                    'completed',
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        verbose_name='Completed?',
                    ),
                ),
                (
                    'retired',
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        verbose_name='Retired?',
                    ),
                ),
                (
                    'rawData',
                    models.TextField(
                        blank=True, editable=False, verbose_name='Raw data'
                    ),
                ),
                (
                    'score',
                    models.PositiveSmallIntegerField(
                        help_text='(value in range=[1,100])',
                        verbose_name='Score',
                    ),
                ),
                (
                    'start_time',
                    models.FloatField(
                        help_text='(in seconds)', verbose_name='Start time'
                    ),
                ),
                (
                    'end_time',
                    models.FloatField(
                        help_text='(in seconds)', verbose_name='End time'
                    ),
                ),
                (
                    'activatedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_multimodalassessmentresult_activated_by',
                        related_query_name='evaldata_multimodalassessmentresults',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Activated by',
                    ),
                ),
                (
                    'completedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_multimodalassessmentresult_completed_by',
                        related_query_name='evaldata_multimodalassessmentresults',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Completed by',
                    ),
                ),
                (
                    'createdBy',
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_multimodalassessmentresult_created_by',
                        related_query_name='evaldata_multimodalassessmentresults',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Created by',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MultiModalAssessmentTask',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'dateCreated',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='Date created'
                    ),
                ),
                (
                    'dateActivated',
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name='Date activated',
                    ),
                ),
                (
                    'dateCompleted',
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name='Date completed',
                    ),
                ),
                (
                    'dateRetired',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date retired'
                    ),
                ),
                (
                    'dateModified',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date modified'
                    ),
                ),
                (
                    'activated',
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        verbose_name='Activated?',
                    ),
                ),
                (
                    'completed',
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        verbose_name='Completed?',
                    ),
                ),
                (
                    'retired',
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        verbose_name='Retired?',
                    ),
                ),
                (
                    'rawData',
                    models.TextField(
                        blank=True, editable=False, verbose_name='Raw data'
                    ),
                ),
                (
                    'requiredAnnotations',
                    models.PositiveSmallIntegerField(
                        help_text='(value in range=[1,50])',
                        verbose_name='Required annotations',
                    ),
                ),
                (
                    'batchNo',
                    models.PositiveIntegerField(
                        help_text='(1-based)', verbose_name='Batch number'
                    ),
                ),
                (
                    'activatedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_multimodalassessmenttask_activated_by',
                        related_query_name='evaldata_multimodalassessmenttasks',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Activated by',
                    ),
                ),
                (
                    'assignedTo',
                    models.ManyToManyField(
                        blank=True,
                        db_index=True,
                        help_text='(users working on this task)',
                        related_name='evaldata_multimodalassessmenttask_assignedTo',
                        related_query_name='evaldata_multimodalassessmenttasks',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Assigned to',
                    ),
                ),
                (
                    'batchData',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_multimodalassessmenttask_batchData',
                        related_query_name='evaldata_multimodalassessmenttasks',
                        to='Campaign.CampaignData',
                        verbose_name='Batch data',
                    ),
                ),
                (
                    'campaign',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_multimodalassessmenttask_campaign',
                        related_query_name='evaldata_multimodalassessmenttasks',
                        to='Campaign.Campaign',
                        verbose_name='Campaign',
                    ),
                ),
                (
                    'completedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_multimodalassessmenttask_completed_by',
                        related_query_name='evaldata_multimodalassessmenttasks',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Completed by',
                    ),
                ),
                (
                    'createdBy',
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_multimodalassessmenttask_created_by',
                        related_query_name='evaldata_multimodalassessmenttasks',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Created by',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TextPairWithImage',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'dateCreated',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='Date created'
                    ),
                ),
                (
                    'dateActivated',
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name='Date activated',
                    ),
                ),
                (
                    'dateCompleted',
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name='Date completed',
                    ),
                ),
                (
                    'dateRetired',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date retired'
                    ),
                ),
                (
                    'dateModified',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date modified'
                    ),
                ),
                (
                    'activated',
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        verbose_name='Activated?',
                    ),
                ),
                (
                    'completed',
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        verbose_name='Completed?',
                    ),
                ),
                (
                    'retired',
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        verbose_name='Retired?',
                    ),
                ),
                (
                    'rawData',
                    models.TextField(
                        blank=True, editable=False, verbose_name='Raw data'
                    ),
                ),
                (
                    'itemID',
                    models.PositiveIntegerField(
                        help_text='(1-based)', verbose_name='Item ID'
                    ),
                ),
                (
                    'itemType',
                    models.CharField(
                        choices=[
                            ('SRC', 'Source text'),
                            ('TGT', 'Target text'),
                            ('REF', 'Reference text'),
                            ('BAD', 'Bad reference'),
                            ('CHK', 'Redundant check'),
                        ],
                        db_index=True,
                        max_length=5,
                        verbose_name='Item type',
                    ),
                ),
                (
                    'sourceID',
                    models.CharField(
                        help_text='(max. 1000 characters)',
                        max_length=1000,
                        verbose_name='Source ID',
                    ),
                ),
                (
                    'sourceText',
                    models.CharField(
                        help_text='(max. 2000 characters)',
                        max_length=2000,
                        verbose_name='Source text',
                    ),
                ),
                (
                    'targetID',
                    models.CharField(
                        help_text='(max. 1000 characters)',
                        max_length=1000,
                        verbose_name='Target ID',
                    ),
                ),
                (
                    'targetText',
                    models.CharField(
                        help_text='(max. 2000 characters)',
                        max_length=2000,
                        verbose_name='Target text',
                    ),
                ),
                ('imageURL', models.URLField(verbose_name='image URL')),
                (
                    'activatedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_textpairwithimage_activated_by',
                        related_query_name='evaldata_textpairwithimages',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Activated by',
                    ),
                ),
                (
                    'completedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_textpairwithimage_completed_by',
                        related_query_name='evaldata_textpairwithimages',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Completed by',
                    ),
                ),
                (
                    'createdBy',
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_textpairwithimage_created_by',
                        related_query_name='evaldata_textpairwithimages',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Created by',
                    ),
                ),
                (
                    'metadata',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to='EvalData.Metadata',
                    ),
                ),
                (
                    'modifiedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_textpairwithimage_modified_by',
                        related_query_name='evaldata_textpairwithimages',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Modified by',
                    ),
                ),
                (
                    'retiredBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_textpairwithimage_retired_by',
                        related_query_name='evaldata_textpairwithimages',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Retired by',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='multimodalassessmenttask',
            name='items',
            field=models.ManyToManyField(
                related_name='evaldata_multimodalassessmenttask_items',
                related_query_name='evaldata_multimodalassessmenttasks',
                to='EvalData.TextPairWithImage',
                verbose_name='Items',
            ),
        ),
        migrations.AddField(
            model_name='multimodalassessmenttask',
            name='modifiedBy',
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='evaldata_multimodalassessmenttask_modified_by',
                related_query_name='evaldata_multimodalassessmenttasks',
                to=settings.AUTH_USER_MODEL,
                verbose_name='Modified by',
            ),
        ),
        migrations.AddField(
            model_name='multimodalassessmenttask',
            name='retiredBy',
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='evaldata_multimodalassessmenttask_retired_by',
                related_query_name='evaldata_multimodalassessmenttasks',
                to=settings.AUTH_USER_MODEL,
                verbose_name='Retired by',
            ),
        ),
        migrations.AddField(
            model_name='multimodalassessmentresult',
            name='item',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name='evaldata_multimodalassessmentresult_item',
                related_query_name='evaldata_multimodalassessmentresults',
                to='EvalData.TextPairWithImage',
                verbose_name='Item',
            ),
        ),
        migrations.AddField(
            model_name='multimodalassessmentresult',
            name='modifiedBy',
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='evaldata_multimodalassessmentresult_modified_by',
                related_query_name='evaldata_multimodalassessmentresults',
                to=settings.AUTH_USER_MODEL,
                verbose_name='Modified by',
            ),
        ),
        migrations.AddField(
            model_name='multimodalassessmentresult',
            name='retiredBy',
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='evaldata_multimodalassessmentresult_retired_by',
                related_query_name='evaldata_multimodalassessmentresults',
                to=settings.AUTH_USER_MODEL,
                verbose_name='Retired by',
            ),
        ),
        migrations.AddField(
            model_name='multimodalassessmentresult',
            name='task',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='evaldata_multimodalassessmentresult_task',
                related_query_name='evaldata_multimodalassessmentresults',
                to='EvalData.MultiModalAssessmentTask',
                verbose_name='Task',
            ),
        ),
    ]
