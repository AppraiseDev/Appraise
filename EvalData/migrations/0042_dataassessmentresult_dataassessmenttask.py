# Generated by Django 2.2.12 on 2020-10-08 13:14
import django.db.models.deletion
from django.conf import settings
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):

    dependencies = [
        ('Campaign', '0013_auto_20200601_1217'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        (
            'EvalData',
            '0041_directassessmentdocumentresult_directassessmentdocumenttask',
        ),
    ]

    operations = [
        migrations.CreateModel(
            name='DataAssessmentTask',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'dateCreated',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='Date created'
                    ),
                ),
                (
                    'dateActivated',
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name='Date activated',
                    ),
                ),
                (
                    'dateCompleted',
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name='Date completed',
                    ),
                ),
                (
                    'dateRetired',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date retired'
                    ),
                ),
                (
                    'dateModified',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date modified'
                    ),
                ),
                (
                    'activated',
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        verbose_name='Activated?',
                    ),
                ),
                (
                    'completed',
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        verbose_name='Completed?',
                    ),
                ),
                (
                    'retired',
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        verbose_name='Retired?',
                    ),
                ),
                (
                    'rawData',
                    models.TextField(
                        blank=True, editable=False, verbose_name='Raw data'
                    ),
                ),
                (
                    '_str_name',
                    models.TextField(blank=True, default='', editable=False),
                ),
                (
                    'requiredAnnotations',
                    models.PositiveSmallIntegerField(
                        help_text='(value in range=[1,50])',
                        verbose_name='Required annotations',
                    ),
                ),
                (
                    'batchNo',
                    models.PositiveIntegerField(
                        help_text='(1-based)', verbose_name='Batch number'
                    ),
                ),
                (
                    'activatedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_dataassessmenttask_activated_by',
                        related_query_name='evaldata_dataassessmenttasks',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Activated by',
                    ),
                ),
                (
                    'assignedTo',
                    models.ManyToManyField(
                        blank=True,
                        db_index=True,
                        help_text='(users working on this task)',
                        related_name='evaldata_dataassessmenttask_assignedTo',
                        related_query_name='evaldata_dataassessmenttasks',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Assigned to',
                    ),
                ),
                (
                    'batchData',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_dataassessmenttask_batchData',
                        related_query_name='evaldata_dataassessmenttasks',
                        to='Campaign.CampaignData',
                        verbose_name='Batch data',
                    ),
                ),
                (
                    'campaign',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_dataassessmenttask_campaign',
                        related_query_name='evaldata_dataassessmenttasks',
                        to='Campaign.Campaign',
                        verbose_name='Campaign',
                    ),
                ),
                (
                    'completedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_dataassessmenttask_completed_by',
                        related_query_name='evaldata_dataassessmenttasks',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Completed by',
                    ),
                ),
                (
                    'createdBy',
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_dataassessmenttask_created_by',
                        related_query_name='evaldata_dataassessmenttasks',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Created by',
                    ),
                ),
                (
                    'items',
                    models.ManyToManyField(
                        related_name='evaldata_dataassessmenttask_items',
                        related_query_name='evaldata_dataassessmenttasks',
                        to='EvalData.TextPair',
                        verbose_name='Items',
                    ),
                ),
                (
                    'modifiedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_dataassessmenttask_modified_by',
                        related_query_name='evaldata_dataassessmenttasks',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Modified by',
                    ),
                ),
                (
                    'retiredBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_dataassessmenttask_retired_by',
                        related_query_name='evaldata_dataassessmenttasks',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Retired by',
                    ),
                ),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataAssessmentResult',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'dateCreated',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='Date created'
                    ),
                ),
                (
                    'dateActivated',
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name='Date activated',
                    ),
                ),
                (
                    'dateCompleted',
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name='Date completed',
                    ),
                ),
                (
                    'dateRetired',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date retired'
                    ),
                ),
                (
                    'dateModified',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='Date modified'
                    ),
                ),
                (
                    'activated',
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        verbose_name='Activated?',
                    ),
                ),
                (
                    'completed',
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        verbose_name='Completed?',
                    ),
                ),
                (
                    'retired',
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        verbose_name='Retired?',
                    ),
                ),
                (
                    'rawData',
                    models.TextField(
                        blank=True, editable=False, verbose_name='Raw data'
                    ),
                ),
                (
                    '_str_name',
                    models.TextField(blank=True, default='', editable=False),
                ),
                (
                    'score',
                    models.PositiveSmallIntegerField(
                        help_text='(value in range=[1,100])',
                        verbose_name='Score',
                    ),
                ),
                (
                    'start_time',
                    models.FloatField(
                        help_text='(in seconds)', verbose_name='Start time'
                    ),
                ),
                (
                    'end_time',
                    models.FloatField(
                        help_text='(in seconds)', verbose_name='End time'
                    ),
                ),
                (
                    'activatedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_dataassessmentresult_activated_by',
                        related_query_name='evaldata_dataassessmentresults',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Activated by',
                    ),
                ),
                (
                    'completedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_dataassessmentresult_completed_by',
                        related_query_name='evaldata_dataassessmentresults',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Completed by',
                    ),
                ),
                (
                    'createdBy',
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_dataassessmentresult_created_by',
                        related_query_name='evaldata_dataassessmentresults',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Created by',
                    ),
                ),
                (
                    'item',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_dataassessmentresult_item',
                        related_query_name='evaldata_dataassessmentresults',
                        to='EvalData.TextPair',
                        verbose_name='Item',
                    ),
                ),
                (
                    'modifiedBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_dataassessmentresult_modified_by',
                        related_query_name='evaldata_dataassessmentresults',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Modified by',
                    ),
                ),
                (
                    'retiredBy',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_dataassessmentresult_retired_by',
                        related_query_name='evaldata_dataassessmentresults',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Retired by',
                    ),
                ),
                (
                    'task',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='evaldata_dataassessmentresult_task',
                        related_query_name='evaldata_dataassessmentresults',
                        to='EvalData.DataAssessmentTask',
                        verbose_name='Task',
                    ),
                ),
            ],
            options={
                'ordering': ['_str_name'],
                'abstract': False,
            },
        ),
    ]
